wordpress_env_defaults:
  db_host: localhost
  db_name: "{{ item.key | underscore }}_{{ env }}"
  db_user: "{{ item.key | underscore }}"
  db_user_host: localhost
  disable_wp_cron: true
  wp_env: "{{ env }}"
  wp_home: "{{ ssl_enabled | ternary('https', 'http') }}://{{ site_hosts_canonical | first }}"
  wp_siteurl: "{{ ssl_enabled | ternary('https', 'http') }}://{{ site_hosts_canonical | first }}/wp"
  domain_current_site: "{{ site_hosts_canonical | first }}"
  wp_debug_log: "{{ www_root }}/{{ item.key }}/logs/debug.log"

# Object cache configuration - enabled when cache.enabled + provider specified
object_cache_env: |
  {% set cache = item.value.cache | default({}) %}
  {% if cache.enabled | default(false) and cache.provider is defined %}
  {% if cache.provider == 'redis' %}
  WP_REDIS_HOST: "{{ cache.host | default('127.0.0.1') }}"
  WP_REDIS_PORT: "{{ cache.port | default(6379) }}"
  WP_REDIS_DATABASE: "{{ cache.database | default(0) }}"
  {% if cache.password is defined %}
  WP_REDIS_PASSWORD: "{{ cache.password }}"
  {% endif %}
  {% if cache.prefix is defined %}
  WP_REDIS_PREFIX: "{{ cache.prefix }}"
  {% else %}
  WP_REDIS_PREFIX: "{{ item.key | underscore }}_"
  {% endif %}
  WP_CACHE_KEY_SALT: "{{ item.key }}_{{ env }}"
  {% elif cache.provider == 'memcached' %}
  WP_MEMCACHED_HOST: "{{ cache.host | default('127.0.0.1') }}"
  WP_MEMCACHED_PORT: "{{ cache.port | default(11211) }}"
  {% if cache.prefix is defined %}
  WP_MEMCACHED_PREFIX: "{{ cache.prefix }}"
  {% else %}
  WP_MEMCACHED_PREFIX: "{{ item.key | underscore }}_"
  {% endif %}
  WP_CACHE_KEY_SALT: "{{ item.key }}_{{ env }}"
  {% endif %}
  {% else %}
  {}
  {% endif %}

site_env: "{{ wordpress_env_defaults | combine(vault_wordpress_env_defaults | default({}), object_cache_env | from_yaml, item.value.env | default({}), vault_wordpress_sites[item.key].env) }}"
site_hosts_canonical: "{{ item.value.site_hosts | map(attribute='canonical') | list }}"
site_hosts_redirects: "{{ item.value.site_hosts | selectattr('redirects', 'defined') | sum(attribute='redirects', start=[]) | list }}"
site_hosts: "{{ site_hosts_canonical | union(site_hosts_redirects) }}"
multisite_subdomains_wildcards: "{{ item.value.multisite.subdomains | default(false) | ternary( site_hosts_canonical | map('regex_replace', '^(www\\.)?(.*)$', '*.\\2') | list, [] ) }}"
ssl_enabled: "{{ item.value.ssl is defined and item.value.ssl.enabled | default(false) }}"
cron_enabled: "{{ site_env.disable_wp_cron and (not item.value.multisite.enabled | default(false) or (item.value.multisite.enabled | default(false) and item.value.multisite.cron | default(true))) }}"
sites_use_ssl: "{{ wordpress_sites.values() | map(attribute='ssl') | selectattr('enabled') | list | count > 0 }}"

composer_authentications: "{{ vault_wordpress_sites[site].composer_authentications | default([]) }}"
# Default `type` is `http-basic`.
composer_authentications_using_basic_auth: "{{ composer_authentications | rejectattr('type', 'defined') | union( composer_authentications | selectattr('type', 'defined') | selectattr('type', 'equalto', 'http-basic') ) }}"
composer_authentications_using_bitbucket_oauth: "{{ composer_authentications | selectattr('type', 'defined') | selectattr('type', 'equalto', 'bitbucket-oauth') }}"
composer_authentications_using_other_token: "{{ composer_authentications | selectattr('type', 'defined') | rejectattr('type', 'equalto', 'http-basic') | rejectattr('type', 'equalto', 'bitbucket-oauth') }}"
