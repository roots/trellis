---
- name: Add Nginx APT key
  ansible.builtin.get_url:
    url: "https://nginx.org/keys/nginx_signing.key"
    dest: /etc/apt/trusted.gpg.d/nginx_signing.key
    mode: '0644'

- name: Convert nginx key to GPG format
  ansible.builtin.command:
    cmd: gpg --dearmor --output /etc/apt/trusted.gpg.d/nginx_signing.gpg /etc/apt/trusted.gpg.d/nginx_signing.key
    creates: /etc/apt/trusted.gpg.d/nginx_signing.gpg

- name: Add Nginx PPA
  apt_repository:
    repo: "{{ nginx_ppa }}"
    update_cache: yes
  register: result
  until: result is success
  retries: 3
  delay: 5

- name: Install Nginx
  ansible.builtin.apt:
    name: "{{ nginx_package }}"
    state: "{{ nginx_package_state | default(apt_package_state) }}"
    update_cache: true

- name: Ensure site directories exist
  file:
    path: "{{ nginx_path }}/{{ item }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  loop:
    - sites-available
    - sites-enabled

- name: Create SSL directory
  file:
    mode: '0700'
    path: "{{ nginx_path }}/ssl"
    state: directory

- name: Copy h5bp configs
  copy:
    src: templates/h5bp
    dest: "{{ nginx_path }}"
    mode: '0755'
  notify: reload nginx

- name: Create nginx.conf
  template:
    src: "{{ nginx_conf }}"
    dest: "{{ nginx_path }}/nginx.conf"
    mode: '0644'
  notify: reload nginx
  tags: nginx-includes

- name: Disable default server
  file:
    path: "{{ nginx_path }}/sites-enabled/default"
    state: absent
  notify: reload nginx

- name: Enable Nginx to start on boot
  service:
    name: nginx
    enabled: yes
    state: started
    use: service
