---
- name: Ensure requested groups are present
  group:
    name: "{{ item }}"
    state: present
  with_items: "{{ users | sum(attribute='groups', start=[]) | list | unique }}"

- name: Ensure sudo group has sudo privileges
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^%sudo"
    line: "%sudo ALL=(ALL:ALL) ALL"
    validate: "/usr/sbin/visudo -cf %s"

- name: Fail if root login will be disabled but admin_user will not be a sudoer
  assert:
    that:
      - "{% for user in users if user.name == admin_user %}{{ 'sudo' in user.groups }}{% else %}{{ false }}{% endfor %}"
      - "{% for user in vault_users | default([]) if user.name == admin_user %}{{ user.password is defined }}{% else %}{{ false }}{% endfor %}"
    msg: |
      When `sshd_permit_root_login: false`, you must add `sudo` to the `groups` for admin_user (in `users` hash), and set a password for admin_user in `vault_users` (in `group_vars/{{ env }}/vault.yml`). Otherwise Ansible could lose the ability to run the necessary sudo commands. {% if sudoer_passwords is defined or vault_sudoer_passwords is defined %}


      Please note that `sudoer_passwords` and `vault_sudoer_passwords have been replaced with `vault_users`. {% endif %}
      More info:
      > https://roots.io/trellis/docs/security/#admin-user-sudoer-password
  when: not sshd_permit_root_login
  tags: sshd

- name: Setup users
  user:
    name: "{{ item.name }}"
    group: "{{ item.groups[0] }}"
    groups: "{{ item.groups | join(',') }}"
    password: '{% for user in vault_users | default([]) if user.name == item.name and user.password is defined %}{{ user.password | password_hash("sha512", (user.salt | default(""))[:16] | regex_replace("[^\.\/a-zA-Z0-9]", "x")) }}{% else %}{{ "!" }}{% endfor %}'
    state: present
    shell: /bin/bash
    update_password: "{{ item.update_password | default('always') }}"
  with_items: "{{ users }}"

- name: Add web user sudoers items for services
  template:
    src: sudoers.d.j2
    dest: "/etc/sudoers.d/{{ web_user }}-services"
    mode: '0440'
    owner: root
    group: root
    validate: "/usr/sbin/visudo -cf %s"
  when: web_sudoers[0] is defined

- name: Add user SSH keys
  authorized_key:
    user: "{{ item.0.name }}"
    key: "{{ item.1 }}"
  with_subelements:
    - "{{ users | default([]) }}"
    - keys

- name: Add deploy SSH keys
  authorized_key:
    user: "{{ web_user }}"
    key: "{{ lookup('file', item) }}"
  with_fileglob: 'public_keys/*.pub'

- name: Check whether Ansible can connect as admin_user
  command: ansible {{ inventory_hostname }} -m ping -u {{ admin_user }} {{ cli_options | default('') }}
  delegate_to: localhost
  failed_when: false
  changed_when: false
  become: no
  register: admin_user_status
  when: (ansible_user != admin_user and not sshd_permit_root_login) or (cli_ask_pass and not sshd_password_authentication)
  tags: [connection-tests, sshd]

- import_tasks: connection-warnings.yml
  when: admin_user_status is not skipped and admin_user_status.rc != 0
  tags: [connection-tests, sshd]
