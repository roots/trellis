---
- stat:
    path: "{{ nginx_includes_templates_path }}"
  become: no
  delegate_to: localhost
  register: nginx_includes_local_directory

- block:
  - name: Loop through site keys to build a list of Nginx includes templates per folder
    find:
      paths: "{{ nginx_includes_templates_path }}/{{ item }}"
      patterns: "*.conf.j2"
      recurse: yes
    loop: "{{ wordpress_sites.keys() | list + ['all'] }}"
    become: no
    delegate_to: localhost
    register: nginx_includes_folder_results

  - name: Flatten include template files into one list
    set_fact:
      nginx_includes_templates:
        files: "{{ nginx_includes_folder_results.results | map(attribute='files') | flatten }}"

  - name: Create includes.d directories
    file:
      path: "{{ nginx_path }}/includes.d/{{ item }}"
      state: directory
      recurse: yes
      mode: '0755'
    loop: "{{ nginx_includes_templates.files | map(attribute='path') |
                    map('regex_replace', nginx_includes_pattern, '\\2') |
                    map('dirname') | unique | list | sort
                 }}"
    when: nginx_includes_templates.files | count

  - name: Template files out to includes.d
    template:
      src: "{{ item }}"
      dest: "{{ nginx_path }}/includes.d/{{ item | regex_replace(nginx_includes_pattern, '\\2') }}"
      mode: '0644'
    loop: "{{ nginx_includes_templates.files | map(attribute='path') | list | sort(True) }}"
    notify: reload nginx
  when: nginx_includes_local_directory.stat.isdir is defined

- name: Cleanup old unmanaged Nginx includes
  block:
    - stat:
        path: "{{ nginx_path }}/includes.d"
      register: nginx_includes_directory

    - name: Retrieve list of existing files in includes.d
      find:
        paths: "{{ nginx_path }}/includes.d"
        pattern: "*.conf"
        recurse: yes
      register: nginx_includes_existing
      when: nginx_includes_directory.stat.isdir is defined

    - name: Remove unmanaged files from includes.d
      file:
        path: "{{ item }}"
        state: absent
      loop: "{{ nginx_includes_existing.files | default({}) | map(attribute='path') |
                      difference(nginx_includes_templates.files | default({} )| map(attribute='path') |
                        map('regex_replace', nginx_includes_pattern, nginx_path + '/includes.d/\\2') | unique
                      ) | list
                   }}"
      when: nginx_includes_directory.stat.isdir is defined
      notify: reload nginx
  when: nginx_includes_d_cleanup | bool
